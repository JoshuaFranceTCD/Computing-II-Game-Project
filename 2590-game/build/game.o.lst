   1              	# 0 "./src/game.s"
   2              	# 1 "C:\\Users\\jfrance\\OneDrive - Trinity College Dublin\\Computing-II-Game-Project\\2590-game//"
   0              	
   0              	
   0              	
   1              	# PASTE LINK TO TEAM VIDEO BELOW
   2              	#
   3              	#
   4              	
   5              	  .syntax unified
   6              	  .cpu cortex-m4
   7              	  .fpu softvfp
   8              	  .thumb
   9              	  
  10              	  .global Main
  11              	  .global  SysTick_Handler
  12              	  .global EXTI0_IRQHandler
  13              	
  14              	  @ Definitions are in definitions.s to keep this file "clean"
  15              	  .include "./src/definitions.s"
   1              	  .equ    GPIOE_BASE, 0x48001000
   2              	  .equ    GPIOE_MODER, (GPIOE_BASE + 0x00)
   3              	  .equ    GPIOE_OTYPER, (GPIOE_BASE + 0x04)
   4              	  .equ    GPIOE_OSPEEDR, (GPIOE_BASE + 0x08)
   5              	  .equ    GPIOE_PUPDR, (GPIOE_BASE + 0x0C)
   6              	  .equ    GPIOE_IDR, (GPIOE_BASE + 0x10)
   7              	  .equ    GPIOE_ODR, (GPIOE_BASE + 0x14)
   8              	  .equ    GPIOE_BSRR, (GPIOE_BASE + 0x18)
   9              	  .equ    GPIOE_LCKR, (GPIOE_BASE + 0x1C)
  10              	  .equ    GPIOE_AFRL, (GPIOE_BASE + 0x20)
  11              	  .equ    GPIOE_AFRH, (GPIOE_BASE + 0x24)
  12              	
  13              	  .equ    RCC_BASE, 0x40021000
  14              	  .equ    RCC_AHBENR, (RCC_BASE + 0x14)
  15              	  .equ    RCC_AHBENR_GPIOEEN_BIT, 21
  16              	
  17              	  .equ    SYSTICK_BASE, 0xE000E010
  18              	  .equ    SYSTICK_CSR, (SYSTICK_BASE + 0x00)
  19              	  .equ    SYSTICK_LOAD, (SYSTICK_BASE + 0x04)
  20              	  .equ    SYSTICK_VAL, (SYSTICK_BASE + 0x08)
  21              	
  22              	  .equ    SYSCFG_BASE, (0x40010000)
  23              	  .equ    SYSCFG_EXTIICR1, (SYSCFG_BASE + 0x08)
  24              	
  25              	  .equ    NVIC_ISER, 0xE000E100
  26              	
  27              	  .equ    EXTI_BASE, 0x40010400
  28              	  .equ    EXTI_IMR, (EXTI_BASE + 0x00)
  29              	  .equ    EXTI_RTSR, (EXTI_BASE + 0x08)
  30              	  .equ    EXTI_FTSR, (EXTI_BASE + 0x0C)
  31              	  .equ    EXTI_PR, (EXTI_BASE + 0x14)
  32              	
  33              	  .equ    LD3_PIN, 9
  34              	  .equ    LD4_PIN, 8
  35              	  .equ    LD5_PIN, 10
  36              	  .equ    LD6_PIN, 15
  37              	  .equ    LD7_PIN, 11
  38              	  .equ    LD8_PIN, 14
  39              	  .equ    LD9_PIN, 12
  40              	  .equ    LD10_PIN, 13
  41              	  
  42              	  .equ    SCB_BASE, 0xE000ED00
  43              	  .equ    SCB_ICSR, (SCB_BASE + 0x04)
  44              	  .equ    SCB_ICSR_PENDSTCLR, (1<<25)
  16              	
  17              	  
  18              	
  19              	  .section .text
  20              	  .equ    FLASH_OFF_TIMER  , 1500      // length of time the flash remains off
  21              	  Main:
  22 0000 F0B5     	  PUSH  {R4-R7,LR}
  23              	  /*************************************   SET UP  ************************************************
  24              	
  25              	  @
  26              	  @ Enable GPIO port E by enabling its clock
  27 0002 A34C     	  LDR     R4, =RCC_AHBENR
  28 0004 2568     	  LDR     R5, [R4]
  29 0006 45F40015 	  ORR     R5, R5, #(0b1 << (RCC_AHBENR_GPIOEEN_BIT))
  30 000a 2560     	  STR     R5, [R4]
  31              	  @ Initialise the first countdown
  32 000c A14C     	  LDR     R4, =blink_countdown
  33 000e 40F2DC55 	  LDR     R5, =FLASH_OFF_TIMER
  34 0012 2560     	  STR     R5, [R4]  
  35              	  @ Configure SysTick Timer to generate an interrupt every 1ms
  36 0014 A04C     	  LDR     R4, =SCB_ICSR               @ Clear any pre-existing interrupts
  37 0016 4FF00075 	  LDR     R5, =SCB_ICSR_PENDSTCLR     @
  38 001a 2560     	  STR     R5, [R4]                    @
  39 001c 9F4C     	  LDR     R4, =SYSTICK_CSR            @ Stop SysTick timer
  40 001e 4FF00005 	  LDR     R5, =0                      @   by writing 0 to CSR
  41 0022 2560     	  STR     R5, [R4]                    @   CSR is the Control and Status Register
  42 0024 9E4C     	  LDR     R4, =SYSTICK_LOAD           @ Set SysTick LOAD for 1ms delay
  43 0026 41F63F75 	  LDR     R5, =7999                   @ Assuming 8MHz clock
  44 002a 2560     	  STR     R5, [R4]                    @ 
  45 002c 9D4C     	  LDR     R4, =SYSTICK_VAL            @   Reset SysTick internal counter to 0
  46 002e 4FF00105 	  LDR     R5, =0x1                    @     by writing any value
  47 0032 2560     	  STR     R5, [R4]
  48 0034 994C     	  LDR     R4, =SYSTICK_CSR            @   Start SysTick timer by setting CSR to 0x7
  49 0036 4FF00705 	  LDR     R5, =0x7                    @     set CLKSOURCE (bit 2) to system clock (1)
  50 003a 2560     	  STR     R5, [R4]                    @     set TICKINT (bit 1) to 1 to enable interrupts
  51              	                                      @     set ENABLE (bit 0) to 1
  52              	  @ Prepare external interrupt Line 0 (USER pushbutton)
  53              	  @ 
  54              	  @ Configure USER pushbutton (GPIO Port A Pin 0 on STM32F3 Discovery
  55              	  @   kit) to use the EXTI0 external interrupt signal
  56              	  @ Determined by bits 3..0 of the External Interrrupt Control
  57              	  @   Register (EXTIICR)
  58 003c 9A4C     	  LDR     R4, =SYSCFG_EXTIICR1
  59 003e 2568     	  LDR     R5, [R4]
  60 0040 25F00F05 	  BIC     R5, R5, #0b1111
  61 0044 2560     	  STR     R5, [R4]
  62              	  @ Enable (unmask) interrupts on external interrupt Line0
  63 0046 994C     	  LDR     R4, =EXTI_IMR
  64 0048 2568     	  LDR     R5, [R4]
  65 004a 45F00105 	  ORR     R5, R5, #1
  66 004e 2560     	  STR     R5, [R4]
  67              	  @ Set falling edge detection on Line0
  68 0050 974C     	  LDR     R4, =EXTI_FTSR
  69 0052 2568     	  LDR     R5, [R4]
  70 0054 45F00105 	  ORR     R5, R5, #1
  71 0058 2560     	  STR     R5, [R4]
  72              	  @ Enable NVIC interrupt #6 (external interrupt Line0)
  73 005a 964C     	  LDR     R4, =NVIC_ISER
  74 005c 4FF04005 	  MOV     R5, #(1<<6)
  75 0060 2560     	  STR     R5, [R4]
  76              	
  77              	
  78              	
  79              	/****************************************** Main Program ******************************************
  80              	
  81 0062 954C     	  LDR     R4, =GPIOE_ODR              
  82 0064 2668     	  LDR     R6, [R4]                    @ lightsOffState  
  83 0066 954C     	  LDR     R4, =FLASH_ON_TIMER
  84 0068 4FF4FA75 	  MOV     R5, #500                    @ FLASH_ON_TIMER = 500;
  85 006c 2560     	  STR     R5, [R4]
  86 006e 944C     	  LDR     R4, =reacted 
  87 0070 2568     	  LDR     R5, [R4]
  88 0072 4FF00005 	  MOV     R5, #0
  89 0076 2560     	  STR     R5, [R4]
  90              	
  91              	
  92 0078 924C     	  LDR     R4, =GPIOE_MODER
  93 007a 934D     	  LDR     R5, =#0x55550000  
  94 007c 2560     	  STR     R5,[R4]
  95 007e 4FF00900 	  MOV     R0, LD3_PIN                 @ currentPin = LD3_PIN
  96              	
  97              	level1:                               @ do {
  98 0082 8F4C     	  LDR     R4, =reacted                @  
  99 0084 2568     	  LDR     R5, [R4]
 100 0086 012D     	  CMP     R5, #1                      
 101 0088 00D0     	  BEQ     endLevel1                   
 102 008a FAE7     	  B       level1                      @ }while(reacted == False);
 103              	endLevel1:
 104 008c 8B4C     	  LDR     R4, =FLASH_ON_TIMER         @ FLASH_ON_TIMER = 475;
 105 008e 40F2DB15 	  MOV     R5, #475
 106 0092 2560     	  STR     R5, [R4]
 107 0094 8A4C     	  LDR     R4, =reacted 
 108 0096 2568     	  LDR     R5, [R4]
 109 0098 4FF00005 	  MOV     R5, #0
 110 009c 2560     	  STR     R5, [R4]
 111 009e 4FF00800 	  MOV     R0, LD4_PIN                 @ currentPin = LD3_PIN
 112              	
 113              	 level2:                              @ do {
 114 00a2 874C     	  LDR     R4, =reacted 
 115 00a4 2568     	  LDR     R5, [R4]
 116 00a6 012D     	  CMP     R5, #1
 117 00a8 00D0     	  BEQ     endLevel2
 118 00aa FAE7     	  B       level2                      @ } while(reacted == False);
 119              	endLevel2:
 120              	
 121 00ac 834C     	  LDR     R4, =FLASH_ON_TIMER         @ FLASH_ON_TIMER = 450;
 122 00ae 4FF4E175 	  MOV     R5, #450
 123 00b2 2560     	  STR     R5, [R4]
 124 00b4 4FF00F00 	  MOV     R0, LD6_PIN                 @ currentPin = LD3_PIN
 125 00b8 814C     	  LDR     R4, =reacted 
 126 00ba 4FF00005 	  MOV     R5,#0
 127 00be 2560     	  STR     R5, [R4]                    @ reacted = False 
 128              	
 129              	level3:
 130 00c0 7F4C     	  LDR     R4, =reacted                @ do { 
 131 00c2 2568     	  LDR     R5, [R4]                    @  
 132 00c4 012D     	  CMP     R5, #1                       
 133 00c6 00D0     	  BEQ     endLevel3                    
 134 00c8 FAE7     	  B       level3                      @ }while(reacted == False);  
 135              	endLevel3:
 136              	
 137 00ca 7C4C     	  LDR     R4, =FLASH_ON_TIMER         @ FLASH_ON_TIMER = 425;
 138 00cc 40F2A915 	  MOV     R5, #425
 139 00d0 2560     	  STR     R5, [R4]
 140 00d2 4FF00E00 	  MOV     R0, LD8_PIN                 @ currentPin = LD3_PIN
 141 00d6 4FF00005 	  MOV     R5,#0
 142 00da 2560     	  STR     R5, [R4]                    @ reacted = False 
 143              	
 144              	level4:
 145 00dc 784C     	  LDR     R4, = reacted                @ do {
 146 00de 2568     	  LDR     R5, [R4]                     @   
 147 00e0 012D     	  CMP     R5, #1                       
 148 00e2 00D0     	  BEQ     endLevel4                    
 149 00e4 FAE7     	  B       level4                       @ }while(reacted == False);
 150              	endLevel4:
 151              	
 152 00e6 754C     	  LDR     R4, =FLASH_ON_TIMER         @ FLASH_ON_TIMER = 400;
 153 00e8 4FF4C875 	  MOV     R5, #400
 154 00ec 2560     	  STR     R5, [R4]
 155 00ee 4FF00E00 	  MOV     R0, LD8_PIN                 @ currentPin = LD8_PIN
 156 00f2 734C     	  LDR     R4, =reacted 
 157 00f4 4FF00005 	  MOV     R5,#0
 158 00f8 2560     	  STR     R5, [R4]                    @ reacted = False  
 159              	
 160              	level5:
 161 00fa 714C     	  LDR     R4, =reacted                @ do {
 162 00fc 2568     	  LDR     R5, [R4]                    @   
 163 00fe 012D     	  CMP     R5, #1                         
 164 0100 00D0     	  BEQ     endLevel5                    
 165 0102 FAE7     	  B       level5                      @ }while(reacted == False);
 166              	endLevel5:
 167              	
 168 0104 6D4C     	  LDR     R4, =FLASH_ON_TIMER         @ FLASH_ON_TIMER = 375;
 169 0106 40F27715 	  MOV     R5, #375
 170 010a 2560     	  STR     R5, [R4]
 171 010c 4FF00D00 	  MOV     R0, LD10_PIN                @ currentPin = LD3_PIN
 172 0110 6B4C     	  LDR     R4, =reacted 
 173 0112 4FF00005 	  MOV     R5,#0
 174 0116 2560     	  STR     R5, [R4]                    @ reacted = False  
 175              	
 176              	level6:
 177 0118 694C     	  LDR     R4, =reacted                @ do {
 178 011a 2568     	  LDR     R5, [R4]                    @  
 179 011c 012D     	  CMP     R5, #1                      
 180 011e 00D0     	  BEQ     endLevel6                   
 181 0120 FAE7     	  B       level6                      @ }while(reacted == False);
 182              	endLevel6:
 183              	
 184 0122 664C     	  LDR     R4, =FLASH_ON_TIMER         @ FLASH_ON_TIMER = 350;
 185 0124 4FF4AF75 	  MOV     R5, #350
 186 0128 2560     	  STR     R5, [R4]
 187 012a 4FF00C00 	  MOV     R0, LD9_PIN                 @ currentPin = LD3_PIN
 188 012e 644C     	  LDR     R4, =reacted 
 189 0130 4FF00005 	  MOV     R5, #0
 190 0134 2560     	  STR     R5, [R4]                    @ reacted = False  
 191              	
 192              	level7:
 193 0136 624C     	  LDR     R4, =reacted                @ do {
 194 0138 2568     	  LDR     R5, [R4]                    @  
 195 013a 012D     	  CMP     R5, #1                      
 196 013c 00D0     	  BEQ     endLevel7                   
 197 013e FAE7     	  B       level7                      @ }while(reacted == False);
 198              	endLevel7:
 199              	
 200 0140 5E4C     	  LDR     R4, =FLASH_ON_TIMER         @ FLASH_ON_TIMER = 200;
 201 0142 4FF0C805 	  MOV     R5, #200
 202 0146 2560     	  STR     R5, [R4]
 203 0148 4FF00B00 	  MOV     R0, LD7_PIN                 @ currentPin = LD3_PIN
 204 014c 5C4C     	  LDR     R4, =reacted 
 205 014e 4FF00005 	  MOV     R5,#0
 206 0152 2560     	  STR     R5, [R4]                    @ reacted = False  
 207              	
 208              	level8:
 209 0154 5A4C     	  LDR     R4, =reacted                @ do {
 210 0156 2568     	  LDR     R5, [R4]                    @  
 211 0158 012D     	  CMP     R5, #1                      
 212 015a 00D0     	  BEQ     endLevel8                   
 213 015c FAE7     	  B       level8                      @ }while(reacted == False);
 214              	endLevel8:
 215              	
 216 015e 574C     	  LDR     R4, =FLASH_ON_TIMER         @ FLASH_ON_TIMER = 100;
 217 0160 4FF06405 	  MOV     R5, #100
 218 0164 2560     	  STR     R5, [R4]
 219 0166 4FF00A00 	  MOV     R0, LD5_PIN                 @ currentPin = LD5_PIN
 220 016a 554C     	  LDR     R4, = reacted 
 221 016c 4FF00005 	  MOV     R5,#0
 222 0170 2560     	  STR     R5, [R4]                    @ reacted = False  
 223              	
 224              	level9:
 225 0172 534C     	  LDR     R4, =reacted                @ do {
 226 0174 2568     	  LDR     R5, [R4]                    @  
 227 0176 012D     	  CMP     R5, #1                      
 228 0178 00D0     	  BEQ     endLevel9                   
 229 017a FAE7     	  B       level9                     @  }while(reacted == False);
 230              	endLevel9:
 231              	  
 232              	
 233              	
 234              	
 235              	// C. Quinn, created ending sequence
 236              	
 237              	  // turning off all led's
 238 017c 4E4C     	  LDR     R4, =GPIOE_ODR
 239 017e 2660     	  STR     R6,[R4]                       @ turn off all the lights
 240              	
 241              	lightSequence:
 242 0180 4D4C     	  LDR     R4, =GPIOE_ODR
 243 0182 2568     	  LDR     R5, [R4]                      @ Read ...
 244 0184 85F40075 	  EOR     R5, #(0b1<<(LD3_PIN))         @ Modify ...
 245 0188 2560     	  STR     R5, [R4]                      @ Write
 246              	  @ wait for 1s ...
 247 018a 504D     	  LDR     R5, =500000     @ Assuming 8MHz clock, 4 cycles per iteration
 248              	                          @ (SUBS + BNE + 2 stall cycles for branch)
 249              	.LwhwaitL1:
 250 018c 013D     	  SUBS    R5, R5, #1      @ Keep looping until we count down to zero
 251 018e FDD1     	  BNE     .LwhwaitL1  
 252              	//==== Lvl 2
 253 0190 494C     	  LDR     R4, =GPIOE_ODR
 254 0192 2568     	  LDR     R5, [R4]                      @ Read ...
 255 0194 85F48075 	  EOR     R5, #(0b1<<(LD4_PIN))         @ Modify ...
 256 0198 2560     	  STR     R5, [R4]                      @ Write
 257              	  @ wait for 1s ...
 258 019a 4C4D     	  LDR     R5, =500000     @ Assuming 8MHz clock, 4 cycles per iteration
 259              	                          @ (SUBS + BNE + 2 stall cycles for branch)
 260              	.LwhwaitL2:
 261 019c 013D     	  SUBS    R5, R5, #1      @ Keep looping until we count down to zero
 262 019e FDD1     	  BNE     .LwhwaitL2  
 263              	//==== Lvl 3
 264 01a0 454C     	  LDR     R4, =GPIOE_ODR
 265 01a2 2568     	  LDR     R5, [R4]                      @ Read ...
 266 01a4 85F40045 	  EOR     R5, #(0b1<<(LD6_PIN))         @ Modify ...
 267 01a8 2560     	  STR     R5, [R4]                      @ Write
 268              	  @ wait for 1s ...
 269 01aa 484D     	  LDR     R5, =500000     @ Assuming 8MHz clock, 4 cycles per iteration
 270              	                          @ (SUBS + BNE + 2 stall cycles for branch)
 271              	.LwhwaitL3:
 272 01ac 013D     	  SUBS    R5, R5, #1      @ Keep looping until we count down to zero
 273 01ae FDD1     	  BNE     .LwhwaitL3  
 274              	//==== Lvl 4
 275 01b0 414C     	  LDR     R4, =GPIOE_ODR
 276 01b2 2568     	  LDR     R5, [R4]                      @ Read ...
 277 01b4 85F48045 	  EOR     R5, #(0b1<<(LD8_PIN))         @ Modify ...
 278 01b8 2560     	  STR     R5, [R4]                      @ Write
 279              	  @ wait for 1s ...
 280 01ba 444D     	  LDR     R5, =500000     @ Assuming 8MHz clock, 4 cycles per iteration
 281              	                          @ (SUBS + BNE + 2 stall cycles for branch)
 282              	.LwhwaitL4:
 283 01bc 013D     	  SUBS    R5, R5, #1      @ Keep looping until we count down to zero
 284 01be FDD1     	  BNE     .LwhwaitL4  
 285              	//==== Lvl 5
 286              	 
 287 01c0 3D4C     	  LDR     R4, =GPIOE_ODR
 288 01c2 2568     	  LDR     R5, [R4]                      @ Read ...
 289 01c4 85F40055 	  EOR     R5, #(0b1<<(LD10_PIN))         @ Modify ...
 290 01c8 2560     	  STR     R5, [R4]                      @ Write
 291              	  @ wait for 1s ...
 292 01ca 404D     	  LDR     R5, =500000     @ Assuming 8MHz clock, 4 cycles per iteration
 293              	                          @ (SUBS + BNE + 2 stall cycles for branch)
 294              	.LwhwaitL5:
 295 01cc 013D     	  SUBS    R5, R5, #1      @ Keep looping until we count down to zero
 296 01ce FDD1     	  BNE     .LwhwaitL5  
 297              	  //==== Lvl 6
 298 01d0 394C     	  LDR     R4, =GPIOE_ODR
 299 01d2 2568     	  LDR     R5, [R4]                      @ Read ...
 300 01d4 85F48055 	  EOR     R5, #(0b1<<(LD9_PIN))         @ Modify ...
 301 01d8 2560     	  STR     R5, [R4]                      @ Write
 302              	
 303              	  @ wait for 1s ...
 304 01da 3C4D     	  LDR     R5, =500000     @ Assuming 8MHz clock, 4 cycles per iteration
 305              	                          @ (SUBS + BNE + 2 stall cycles for branch)
 306              	.LwhwaitL6:
 307 01dc 013D     	  SUBS    R5, R5, #1      @ Keep looping until we count down to zero
 308 01de FDD1     	  BNE     .LwhwaitL6  
 309              	  //==== Lvl 7
 310 01e0 354C     	  LDR     R4, =GPIOE_ODR
 311 01e2 2568     	  LDR     R5, [R4]                            @ Read ...
 312 01e4 85F40065 	  EOR     R5, #(0b1<<(LD7_PIN))               @ Modify ...
 313 01e8 2560     	  STR     R5, [R4]                            @ Write
 314              	  @ wait for 1s ...
 315 01ea 384D     	  LDR     R5, =500000     @ Assuming 8MHz clock, 4 cycles per iteration
 316              	                          @ (SUBS + BNE + 2 stall cycles for branch)
 317              	.LwhwaitL7:
 318 01ec 013D     	  SUBS    R5, R5, #1      @ Keep looping until we count down to zero
 319 01ee FDD1     	  BNE     .LwhwaitL7  
 320              	  //==== Lvl 8
 321 01f0 314C     	  LDR     R4, =GPIOE_ODR
 322 01f2 2568     	  LDR     R5, [R4]                      @ Read ...
 323 01f4 85F48065 	  EOR     R5, #(0b1<<(LD5_PIN))         @ Modify ...
 324 01f8 2560     	  STR     R5, [R4]                      @ Write
 325              	  @ wait for 1s ...
 326 01fa 344D     	   LDR     R5, =500000                             @ Assuming 8MHz clock, 4 cycles per iteration
 327              	                                                  @ (SUBS + BNE + 2 stall cycles for branch)
 328              	.LwhwaitL8:
 329 01fc 013D     	  SUBS    R5, R5, #1                              @ Keep looping until we count down to zero
 330 01fe FDD1     	  BNE     .LwhwaitL8  
 331              	  
 332 0200 012F     	  CMP     R7, #1
 333 0202 02D0     	  BEQ     End_Main
 334 0204 4FF00107 	  MOV     R7, #1            
 335 0208 BAE7     	  B       lightSequence
 336              	End_Main:
 337 020a F0BD     	  POP     {R4-R7,PC}
 338              	
 339              	
 340              	/*******************************Subroutines & Interrupts **********************/
 341              	
 342              	 
 343              	@
 344              	@ SysTick interrupt handler (blink currentPin)
 345              	@
 347              	SysTick_Handler:
 348 020c 2DE9FF43 	  PUSH    {R0-R9, LR}                      
 349 0210 204C     	  LDR     R4, =blink_countdown          @ if (countdown != 0) {
 350 0212 2568     	  LDR     R5, [R4]                      @
 351 0214 002D     	  CMP     R5, #0                        @
 352 0216 03D0     	  BEQ     .LelseFire                    @
 353 0218 A5F10105 	  SUB     R5, R5, #1                    @   countdown = countdown - 1;
 354 021c 2560     	  STR     R5, [R4]                      @
 355 021e 1DE0     	  B       .LendIfDelay                  @ }
 356              	.LelseFire:                             @ else {
 357 0220 274E     	  LDR     R6, = reacted                 @
 358 0222 3768     	  LDR     R7,  [R6]
 359 0224 012F     	  CMP     R7,#1                         @   )
 360 0226 08D0     	  BEQ     .LskipInvert                  @   if(reacted) 
 361 0228 234C     	  LDR     R4, =GPIOE_ODR                @   {
 362 022a 2568     	  LDR     R5, [R4]                      @   ledStatus = on/off
 363 022c 4FF00106 	  MOV     R6, #0b1
 364 0230 06FA00F6 	  MOV     R6, R6, LSL R0
 365 0234 85EA0605 	  EOR     R5,R6                         @   GPIOE_ODR = GPIOE_ODR ^ (1<<currentPin);
 366 0238 2560     	  STR     R5, [R4]                      @   ledStatus = !ledStatus
 367              	.LskipInvert:                           @   }
 368 023a 4FF00106 	  MOV     R6, #0b1
 369 023e 06FA00F6 	  MOV     R6, R6, LSL R0
 370 0242 05EA0605 	  AND     R5, R6
 371 0246 B542     	  CMP     R5,R6                         @ if(ledStatus == ledOff)
 372 0248 04D0     	  BEQ     .LflashOn                     @   {
 373 024a 124C     	  LDR     R4, =blink_countdown          @     
 374 024c 40F2DC55 	  LDR     R5, = FLASH_OFF_TIMER         @
 375 0250 2560     	  STR     R5, [R4]                      @     countdown = FLASH_OFF_TIMER;
 376 0252 03E0     	  B       .LendIfDelay                  @   }
 377              	.LflashOn:
 378 0254 0F4C     	  LDR     R4, =blink_countdown          @   else{
 379 0256 194D     	  LDR     R5, = FLASH_ON_TIMER
 380 0258 2D68     	  LDR     R5, [R5]
 381 025a 2560     	  STR     R5, [R4]                      @   countdown = FLASH_ON_TIMER;
 382              	.LendIfDelay:                           @     }
 383 025c 0E4C     	  LDR     R4, =SCB_ICSR                 @ Clear (acknowledge) the interrupt
 384 025e 4FF00075 	  LDR     R5, =SCB_ICSR_PENDSTCLR       @
 385 0262 2560     	  STR     R5, [R4]                      @
 386 0264 BDE8FF83 	  POP  {R0-R9, PC}                      @ Return from interrupt handler
 387              	
 388              	
 389              	@
 390              	@ External interrupt line 0 interrupt handler(Push Button Handler)
 391              	@   (Check if player pressed the button on time)
 392              	@
 393              	@     parameters
 394              	@       R0 - currentPin
 396              	
 397              	EXTI0_IRQHandler:
 398 0268 70B5     	  PUSH    {R4-R6,LR}
 399 026a 134C     	  LDR     R4, =GPIOE_ODR               
 400 026c 2568     	  LDR     R5, [R4]                        
 401 026e 4FF00106 	  MOV     R6, #0b1                        
 402 0272 06FA00F6 	  MOV     R6, R6, LSL R0                  
 403 0276 05EA0605 	  AND     R5, R6                          
 404 027a B542     	  CMP     R5, R6                          
 405 027c 03D1     	  BNE     .LledNotOn                      
 406 027e 104C     	  LDR     R4, =reacted                    
 407 0280 4FF00105 	  MOV     R5, #1
 408 0284 2560     	  STR     R5, [R4]
 409              	  .LledNotOn:
 410 0286 124C     	  LDR     R4, =EXTI_PR                    
 411 0288 4FF00105 	  MOV     R5, #(1<<0)                     
 412 028c 2560     	  STR     R5, [R4]                        
 413 028e 70BD     	  POP     {R4-R6,PC}                      
 414              	  
 415              	
 416              	
 417              	// memoryAddresses
 418              	  .section .data
 419              	blink_countdown:
 420 0000 00000000 	  .space  4
 421              	reacted:
 422 0004 00000000 	  .space 4
 423              	FLASH_ON_TIMER:
 424 0008 00000000 	  .space 4
 425              	
 426              	
 427              	
 428              	  .end...
DEFINED SYMBOLS
        ./src/game.s:21     .text:00000000 Main
        ./src/game.s:347    .text:0000020c SysTick_Handler
        ./src/game.s:397    .text:00000268 EXTI0_IRQHandler
 ./src/definitions.s:1      *ABS*:48001000 GPIOE_BASE
 ./src/definitions.s:2      *ABS*:48001000 GPIOE_MODER
 ./src/definitions.s:3      *ABS*:48001004 GPIOE_OTYPER
 ./src/definitions.s:4      *ABS*:48001008 GPIOE_OSPEEDR
 ./src/definitions.s:5      *ABS*:4800100c GPIOE_PUPDR
 ./src/definitions.s:6      *ABS*:48001010 GPIOE_IDR
 ./src/definitions.s:7      *ABS*:48001014 GPIOE_ODR
 ./src/definitions.s:8      *ABS*:48001018 GPIOE_BSRR
 ./src/definitions.s:9      *ABS*:4800101c GPIOE_LCKR
 ./src/definitions.s:10     *ABS*:48001020 GPIOE_AFRL
 ./src/definitions.s:11     *ABS*:48001024 GPIOE_AFRH
 ./src/definitions.s:13     *ABS*:40021000 RCC_BASE
 ./src/definitions.s:14     *ABS*:40021014 RCC_AHBENR
 ./src/definitions.s:15     *ABS*:00000015 RCC_AHBENR_GPIOEEN_BIT
 ./src/definitions.s:17     *ABS*:e000e010 SYSTICK_BASE
 ./src/definitions.s:18     *ABS*:e000e010 SYSTICK_CSR
 ./src/definitions.s:19     *ABS*:e000e014 SYSTICK_LOAD
 ./src/definitions.s:20     *ABS*:e000e018 SYSTICK_VAL
 ./src/definitions.s:22     *ABS*:40010000 SYSCFG_BASE
 ./src/definitions.s:23     *ABS*:40010008 SYSCFG_EXTIICR1
 ./src/definitions.s:25     *ABS*:e000e100 NVIC_ISER
 ./src/definitions.s:27     *ABS*:40010400 EXTI_BASE
 ./src/definitions.s:28     *ABS*:40010400 EXTI_IMR
 ./src/definitions.s:29     *ABS*:40010408 EXTI_RTSR
 ./src/definitions.s:30     *ABS*:4001040c EXTI_FTSR
 ./src/definitions.s:31     *ABS*:40010414 EXTI_PR
 ./src/definitions.s:33     *ABS*:00000009 LD3_PIN
 ./src/definitions.s:34     *ABS*:00000008 LD4_PIN
 ./src/definitions.s:35     *ABS*:0000000a LD5_PIN
 ./src/definitions.s:36     *ABS*:0000000f LD6_PIN
 ./src/definitions.s:37     *ABS*:0000000b LD7_PIN
 ./src/definitions.s:38     *ABS*:0000000e LD8_PIN
 ./src/definitions.s:39     *ABS*:0000000c LD9_PIN
 ./src/definitions.s:40     *ABS*:0000000d LD10_PIN
 ./src/definitions.s:42     *ABS*:e000ed00 SCB_BASE
 ./src/definitions.s:43     *ABS*:e000ed04 SCB_ICSR
 ./src/definitions.s:44     *ABS*:02000000 SCB_ICSR_PENDSTCLR
        ./src/game.s:20     *ABS*:000005dc FLASH_OFF_TIMER
        ./src/game.s:22     .text:00000000 $t
        ./src/game.s:419    .data:00000000 blink_countdown
        ./src/game.s:423    .data:00000008 FLASH_ON_TIMER
        ./src/game.s:421    .data:00000004 reacted
        ./src/game.s:97     .text:00000082 level1
        ./src/game.s:103    .text:0000008c endLevel1
        ./src/game.s:113    .text:000000a2 level2
        ./src/game.s:119    .text:000000ac endLevel2
        ./src/game.s:129    .text:000000c0 level3
        ./src/game.s:135    .text:000000ca endLevel3
        ./src/game.s:144    .text:000000dc level4
        ./src/game.s:150    .text:000000e6 endLevel4
        ./src/game.s:160    .text:000000fa level5
        ./src/game.s:166    .text:00000104 endLevel5
        ./src/game.s:176    .text:00000118 level6
        ./src/game.s:182    .text:00000122 endLevel6
        ./src/game.s:192    .text:00000136 level7
        ./src/game.s:198    .text:00000140 endLevel7
        ./src/game.s:208    .text:00000154 level8
        ./src/game.s:214    .text:0000015e endLevel8
        ./src/game.s:224    .text:00000172 level9
        ./src/game.s:230    .text:0000017c endLevel9
        ./src/game.s:241    .text:00000180 lightSequence
        ./src/game.s:336    .text:0000020a End_Main
        ./src/game.s:420    .data:00000000 $d
        ./src/game.s:428    .text:00000290 $d

NO UNDEFINED SYMBOLS
